P <- norm(tar.data_$dt) %>%
map_dbl(
function(time) {
p <- time/sumT
return(p * log(1/p))
}
)
return(1/log(N+1)*sumP)
}
)
return(Tcov)
}
bl <- read.target.csv("baseline10/targets.csv")
calc.Tcov(bl,10)
bl <- read.target.csv("baseline10/targets.csv")
bl
# calc.Tcov(bl,10)
reward = 500
tau = 1
read.vehicle.csv <- function(file){
data <-  read.csv(
file=file,
header=TRUE,
sep=',',
colClasses=c(
'id' = 'character',
'source' = 'character',
'destination' = 'character',
'shortest.path.length' = 'double',
'diversion.path.length' = 'double',
'sample.time' = 'double',
'sample.time.diff' = 'double',
'target.id' = 'character'
)
)
return(as_tibble(data))
}
mutate.utility <- function(veh.data) {
veh.data <- veh.data %>%
mutate(utility = reward * (1 - exp(-(sample.time.diff/tau))) - (abs(diversion.path.length) - abs(shortest.path.length)))
return(veh.data)
}
read.target.csv <- function(file){
data <- read.csv(
file=file,
header=TRUE,
sep=',',
colClasses = c(
'target' = 'character',
'vehicle' = 'character',
'time' = 'double',
'dt' = 'double'
)
)
data <- data %>% as_tibble()
data <- data %>%
within(dt[dt==Inf] <- time[dt==Inf])
return(as_tibble(data))
}
calc.Tcov <- function(tar.data,M){
targets <- unique(tar.data$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- tar.data %>%
filter(target == tr)
tdata <- tdata[,"dt"]
N <- nrow(tar.data_)
sumT <- sum(tar.data_$dt)
dt.norm <- preProcess(tar.data_, method = c("range")) %>%
predict(tar.data_)
P <- norm(tar.data_$dt) %>%
map_dbl(
function(time) {
p <- time/sumT
return(p * log(1/p))
}
)
return(1/log(N+1)*sumP)
}
)
return(Tcov)
}
knitr::opts_chunk$set(echo=FALSE)
library("tidyverse")
library("latex2exp")
library("caret")
reward = 500
tau = 1
read.vehicle.csv <- function(file){
data <-  read.csv(
file=file,
header=TRUE,
sep=',',
colClasses=c(
'id' = 'character',
'source' = 'character',
'destination' = 'character',
'shortest.path.length' = 'double',
'diversion.path.length' = 'double',
'sample.time' = 'double',
'sample.time.diff' = 'double',
'target.id' = 'character'
)
)
return(as_tibble(data))
}
mutate.utility <- function(veh.data) {
veh.data <- veh.data %>%
mutate(utility = reward * (1 - exp(-(sample.time.diff/tau))) - (abs(diversion.path.length) - abs(shortest.path.length)))
return(veh.data)
}
read.target.csv <- function(file){
data <- read.csv(
file=file,
header=TRUE,
sep=',',
colClasses = c(
'target' = 'character',
'vehicle' = 'character',
'time' = 'double',
'dt' = 'double'
)
)
data <- data %>% as_tibble()
data <- data %>%
within(dt[dt==Inf] <- time[dt==Inf])
return(as_tibble(data))
}
calc.Tcov <- function(tar.data,M){
targets <- unique(tar.data$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- tar.data %>%
filter(target == tr)
tdata <- tdata[,c("time","dt")]
N <- nrow(tar.data_)
sumT <- sum(tar.data_$dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
# P <- norm(tar.data_$dt) %>%
#     map_dbl(
#         function(time) {
#             p <- time/sumT
#             return(p * log(1/p))
#         }
#     )
# return(1/log(N+1)*sumP)
}
)
return(Tcov)
}
bl <- read.target.csv("baseline10/targets.csv")
calc.Tcov(bl,10)
reward = 500
tau = 1
read.vehicle.csv <- function(file){
data <-  read.csv(
file=file,
header=TRUE,
sep=',',
colClasses=c(
'id' = 'character',
'source' = 'character',
'destination' = 'character',
'shortest.path.length' = 'double',
'diversion.path.length' = 'double',
'sample.time' = 'double',
'sample.time.diff' = 'double',
'target.id' = 'character'
)
)
return(as_tibble(data))
}
mutate.utility <- function(veh.data) {
veh.data <- veh.data %>%
mutate(utility = reward * (1 - exp(-(sample.time.diff/tau))) - (abs(diversion.path.length) - abs(shortest.path.length)))
return(veh.data)
}
read.target.csv <- function(file){
data <- read.csv(
file=file,
header=TRUE,
sep=',',
colClasses = c(
'target' = 'character',
'vehicle' = 'character',
'time' = 'double',
'dt' = 'double'
)
)
data <- data %>% as_tibble()
data <- data %>%
within(dt[dt==Inf] <- time[dt==Inf])
return(as_tibble(data))
}
calc.Tcov <- function(tar.data,M){
targets <- unique(tar.data$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- tar.data %>%
filter(target == tr)
tdata <- tdata[,c("time","dt")]
N <- nrow(tdata)
sumT <- sum(tdata)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
# P <- norm(tar.data_$dt) %>%
#     map_dbl(
#         function(time) {
#             p <- time/sumT
#             return(p * log(1/p))
#         }
#     )
# return(1/log(N+1)*sumP)
}
)
return(Tcov)
}
bl <- read.target.csv("baseline10/targets.csv")
calc.Tcov(bl,10)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(tar.data$target)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>% filter(target == tr)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>% filter(target == tr)
print(tdata)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select("dt")
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(.$dt)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select($dt)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(.data$dt)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
select(dt) %>%
filter(target == tr)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
select(dt) %>%
filter(target == tr)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(time,dt)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(time,dt)
print(tdata)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
print(tdata)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
}
)
bl <- read.target.csv("baseline10/targets.csv")
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = df * log(1/df))
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = tdata.norm$df * log(1/tdata.norm$df))
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = 4)
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = dt/2)
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = log(1/dt))
print(tdata.norm)
}
)
bl <- read.target.csv("baseline10/targets.csv")
M <- 10
targets <- unique(bl$target)
Tcov <- targets %>%
map_dbl(
function(tr) {
tdata <- bl %>%
filter(target == tr) %>%
select(dt)
tdata.norm <- tdata %>%
preProcess(method = c("range")) %>%
predict(tdata)
tdata.norm[nrow(tdata.norm) + 1,] <- mean(tdata.norm$dt)
tdata.norm <- tdata.norm %>%
mutate(sample = dt*log(1/dt))
print(tdata.norm)
}
)
